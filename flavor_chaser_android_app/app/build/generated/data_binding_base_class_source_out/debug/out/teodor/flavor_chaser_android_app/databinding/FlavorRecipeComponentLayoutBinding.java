// Generated by view binder compiler. Do not edit!
package teodor.flavor_chaser_android_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tobiasschuerg.prefixsuffix.PrefixSuffixEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import teodor.flavor_chaser_android_app.R;

public final class FlavorRecipeComponentLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AutoCompleteTextView autoCompleteTextViewFlavorName;

  @NonNull
  public final PrefixSuffixEditText editTextRecipeFlavorPercentage;

  @NonNull
  public final Guideline guidelineVertical;

  @NonNull
  public final ImageView imageViewDeleteRecipeFlavor;

  private FlavorRecipeComponentLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull AutoCompleteTextView autoCompleteTextViewFlavorName,
      @NonNull PrefixSuffixEditText editTextRecipeFlavorPercentage,
      @NonNull Guideline guidelineVertical, @NonNull ImageView imageViewDeleteRecipeFlavor) {
    this.rootView = rootView;
    this.autoCompleteTextViewFlavorName = autoCompleteTextViewFlavorName;
    this.editTextRecipeFlavorPercentage = editTextRecipeFlavorPercentage;
    this.guidelineVertical = guidelineVertical;
    this.imageViewDeleteRecipeFlavor = imageViewDeleteRecipeFlavor;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FlavorRecipeComponentLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FlavorRecipeComponentLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.flavor_recipe_component_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FlavorRecipeComponentLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoCompleteTextViewFlavorName;
      AutoCompleteTextView autoCompleteTextViewFlavorName = ViewBindings.findChildViewById(rootView, id);
      if (autoCompleteTextViewFlavorName == null) {
        break missingId;
      }

      id = R.id.editTextRecipeFlavorPercentage;
      PrefixSuffixEditText editTextRecipeFlavorPercentage = ViewBindings.findChildViewById(rootView, id);
      if (editTextRecipeFlavorPercentage == null) {
        break missingId;
      }

      id = R.id.guidelineVertical;
      Guideline guidelineVertical = ViewBindings.findChildViewById(rootView, id);
      if (guidelineVertical == null) {
        break missingId;
      }

      id = R.id.imageViewDeleteRecipeFlavor;
      ImageView imageViewDeleteRecipeFlavor = ViewBindings.findChildViewById(rootView, id);
      if (imageViewDeleteRecipeFlavor == null) {
        break missingId;
      }

      return new FlavorRecipeComponentLayoutBinding((ConstraintLayout) rootView,
          autoCompleteTextViewFlavorName, editTextRecipeFlavorPercentage, guidelineVertical,
          imageViewDeleteRecipeFlavor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
